env CL_EVM_CMD=chainlink-evm
env CL_SOLANA_CMD=chainlink-solana

# start node
exec sh -c 'eval "echo \"$(cat config.toml.tmpl)\" > config.toml"'
exec chainlink node -c config.toml start -p password -a creds &

# initialize client
env NODEURL=http://localhost:$PORT
exec curl --retry 10 --retry-max-time 60 --retry-connrefused $NODEURL
exec chainlink --remote-node-url $NODEURL admin login -file creds --bypass-version-check

exec chainlink --remote-node-url $NODEURL health
cmp stdout out.txt

exec chainlink --remote-node-url $NODEURL health -json
cp stdout compact.json
exec jq . compact.json
cmp stdout out.json

exec chainlink --remote-node-url $NODEURL health -failing
cmp stdout out-unhealthy.txt

exec chainlink --remote-node-url $NODEURL health -f -json
cp stdout compact.json
exec jq . compact.json
cmp stdout out-unhealthy.json

-- go:build.integration --
-- testdb.txt --
CL_DATABASE_URL
-- testport.txt --
PORT

-- password --
T.tLHkcmwePT/p,]sYuntjwHKAsrhm#4eRs4LuKHwvHejWYAC2JP4M8HimwgmbaZ
-- creds --
notreal@fakeemail.ch
fj293fbBnlQ!f9vNs

-- config.toml.tmpl --
[Webserver]
HTTPPort = $PORT

[[Cosmos]]
ChainID = 'Foo'

[[Cosmos.Nodes]]
Name = 'primary'
TendermintURL = 'http://tender.mint'

[[EVM]]
ChainID = '1'

[[EVM.Nodes]]
Name = 'fake'
WSURL = 'wss://foo.bar/ws'
HTTPURL = 'https://foo.bar'

[[Solana]]
ChainID = 'Bar'

[[Solana.Nodes]]
Name = 'primary'
URL = 'http://solana.web'

[[Starknet]]
ChainID = 'Baz'

[[Starknet.Nodes]]
Name = 'primary'
URL = 'http://stark.node'

-- out.txt --
ok BridgeStatusReporter
ok Cosmos.Foo.RelayerService
ok Cosmos.Foo.RelayerService.PluginRelayerClient
ok Cosmos.Foo.RelayerService.PluginRelayerClient.PluginCosmos
ok Cosmos.Foo.RelayerService.PluginRelayerClient.PluginCosmos.Chain
ok Cosmos.Foo.RelayerService.PluginRelayerClient.PluginCosmos.Relayer
ok Cosmos.Foo.RelayerService.PluginRelayerClient.PluginCosmos.Txm
ok EVM.1.RelayerService
ok EVM.1.RelayerService.PluginRelayerClient
ok EVM.1.RelayerService.PluginRelayerClient.PluginEVM
ok EVM.1.RelayerService.PluginRelayerClient.PluginEVM.BalanceMonitor
ok EVM.1.RelayerService.PluginRelayerClient.PluginEVM.HeadBroadcaster
ok EVM.1.RelayerService.PluginRelayerClient.PluginEVM.HeadTracker
!  EVM.1.RelayerService.PluginRelayerClient.PluginEVM.HeadTracker.HeadListener
	Listener connected = false, receiving heads = false
ok EVM.1.RelayerService.PluginRelayerClient.PluginEVM.LogBroadcaster
!  EVM.1.RelayerService.PluginRelayerClient.PluginEVM.Mailbox.Monitor
	service is "Unstarted", not started
ok EVM.1.RelayerService.PluginRelayerClient.PluginEVM.Relayer
ok EVM.1.RelayerService.PluginRelayerClient.PluginEVM.Txm
ok EVM.1.RelayerService.PluginRelayerClient.PluginEVM.Txm.BlockHistoryEstimator
ok EVM.1.RelayerService.PluginRelayerClient.PluginEVM.Txm.Broadcaster
ok EVM.1.RelayerService.PluginRelayerClient.PluginEVM.Txm.Confirmer
ok EVM.1.RelayerService.PluginRelayerClient.PluginEVM.Txm.Finalizer
ok EVM.1.RelayerService.PluginRelayerClient.PluginEVM.Txm.WrappedEvmEstimator
ok HeadReporter
ok Heartbeat
ok JobSpawner
ok LLOTransmissionReaper
ok Mailbox.Monitor
ok Mercury.WSRPCPool
ok Mercury.WSRPCPool.CacheSet
ok PipelineORM
ok PipelineRunner
ok PipelineRunner.BridgeCache
ok RetirementReportCache
ok Solana.Bar.RelayerService
ok Solana.Bar.RelayerService.PluginRelayerClient
ok Solana.Bar.RelayerService.PluginRelayerClient.PluginSolana
ok Solana.Bar.RelayerService.PluginRelayerClient.PluginSolana.Chain
ok Solana.Bar.RelayerService.PluginRelayerClient.PluginSolana.Chain.BalanceMonitor
ok Solana.Bar.RelayerService.PluginRelayerClient.PluginSolana.Chain.Txm
ok Solana.Bar.RelayerService.PluginRelayerClient.PluginSolana.Relayer
ok StarkNet.Baz.RelayerService
ok StarkNet.Baz.RelayerService.PluginRelayerClient
ok StarkNet.Baz.RelayerService.PluginRelayerClient.PluginStarknet
ok StarkNet.Baz.RelayerService.PluginRelayerClient.PluginStarknet.Chain
ok StarkNet.Baz.RelayerService.PluginRelayerClient.PluginStarknet.Chain.Txm
ok StarkNet.Baz.RelayerService.PluginRelayerClient.PluginStarknet.Relayer
ok TelemetryManager
ok WorkflowLimiter
ok WorkflowStore

-- out-unhealthy.txt --
!  EVM.1.RelayerService.PluginRelayerClient.PluginEVM.HeadTracker.HeadListener
	Listener connected = false, receiving heads = false
!  EVM.1.RelayerService.PluginRelayerClient.PluginEVM.Mailbox.Monitor
	service is "Unstarted", not started

-- out.json --
{
  "data": [
    {
      "type": "checks",
      "id": "BridgeStatusReporter",
      "attributes": {
        "name": "BridgeStatusReporter",
        "status": "passing",
        "output": ""
      }
    },
    {
      "type": "checks",
      "id": "Cosmos.Foo.RelayerService",
      "attributes": {
        "name": "Cosmos.Foo.RelayerService",
        "status": "passing",
        "output": ""
      }
    },
    {
      "type": "checks",
      "id": "Cosmos.Foo.RelayerService.PluginRelayerClient",
      "attributes": {
        "name": "Cosmos.Foo.RelayerService.PluginRelayerClient",
        "status": "passing",
        "output": ""
      }
    },
    {
      "type": "checks",
      "id": "Cosmos.Foo.RelayerService.PluginRelayerClient.PluginCosmos",
      "attributes": {
        "name": "Cosmos.Foo.RelayerService.PluginRelayerClient.PluginCosmos",
        "status": "passing",
        "output": ""
      }
    },
    {
      "type": "checks",
      "id": "Cosmos.Foo.RelayerService.PluginRelayerClient.PluginCosmos.Chain",
      "attributes": {
        "name": "Cosmos.Foo.RelayerService.PluginRelayerClient.PluginCosmos.Chain",
        "status": "passing",
        "output": ""
      }
    },
    {
      "type": "checks",
      "id": "Cosmos.Foo.RelayerService.PluginRelayerClient.PluginCosmos.Relayer",
      "attributes": {
        "name": "Cosmos.Foo.RelayerService.PluginRelayerClient.PluginCosmos.Relayer",
        "status": "passing",
        "output": ""
      }
    },
    {
      "type": "checks",
      "id": "Cosmos.Foo.RelayerService.PluginRelayerClient.PluginCosmos.Txm",
      "attributes": {
        "name": "Cosmos.Foo.RelayerService.PluginRelayerClient.PluginCosmos.Txm",
        "status": "passing",
        "output": ""
      }
    },
    {
      "type": "checks",
      "id": "EVM.1.RelayerService",
      "attributes": {
        "name": "EVM.1.RelayerService",
        "status": "passing",
        "output": ""
      }
    },
    {
      "type": "checks",
      "id": "EVM.1.RelayerService.PluginRelayerClient",
      "attributes": {
        "name": "EVM.1.RelayerService.PluginRelayerClient",
        "status": "passing",
        "output": ""
      }
    },
    {
      "type": "checks",
      "id": "EVM.1.RelayerService.PluginRelayerClient.PluginEVM",
      "attributes": {
        "name": "EVM.1.RelayerService.PluginRelayerClient.PluginEVM",
        "status": "passing",
        "output": ""
      }
    },
    {
      "type": "checks",
      "id": "EVM.1.RelayerService.PluginRelayerClient.PluginEVM.BalanceMonitor",
      "attributes": {
        "name": "EVM.1.RelayerService.PluginRelayerClient.PluginEVM.BalanceMonitor",
        "status": "passing",
        "output": ""
      }
    },
    {
      "type": "checks",
      "id": "EVM.1.RelayerService.PluginRelayerClient.PluginEVM.HeadBroadcaster",
      "attributes": {
        "name": "EVM.1.RelayerService.PluginRelayerClient.PluginEVM.HeadBroadcaster",
        "status": "passing",
        "output": ""
      }
    },
    {
      "type": "checks",
      "id": "EVM.1.RelayerService.PluginRelayerClient.PluginEVM.HeadTracker",
      "attributes": {
        "name": "EVM.1.RelayerService.PluginRelayerClient.PluginEVM.HeadTracker",
        "status": "passing",
        "output": ""
      }
    },
    {
      "type": "checks",
      "id": "EVM.1.RelayerService.PluginRelayerClient.PluginEVM.HeadTracker.HeadListener",
      "attributes": {
        "name": "EVM.1.RelayerService.PluginRelayerClient.PluginEVM.HeadTracker.HeadListener",
        "status": "failing",
        "output": "Listener connected = false, receiving heads = false"
      }
    },
    {
      "type": "checks",
      "id": "EVM.1.RelayerService.PluginRelayerClient.PluginEVM.LogBroadcaster",
      "attributes": {
        "name": "EVM.1.RelayerService.PluginRelayerClient.PluginEVM.LogBroadcaster",
        "status": "passing",
        "output": ""
      }
    },
    {
      "type": "checks",
      "id": "EVM.1.RelayerService.PluginRelayerClient.PluginEVM.Mailbox.Monitor",
      "attributes": {
        "name": "EVM.1.RelayerService.PluginRelayerClient.PluginEVM.Mailbox.Monitor",
        "status": "failing",
        "output": "service is \"Unstarted\", not started"
      }
    },
    {
      "type": "checks",
      "id": "EVM.1.RelayerService.PluginRelayerClient.PluginEVM.Relayer",
      "attributes": {
        "name": "EVM.1.RelayerService.PluginRelayerClient.PluginEVM.Relayer",
        "status": "passing",
        "output": ""
      }
    },
    {
      "type": "checks",
      "id": "EVM.1.RelayerService.PluginRelayerClient.PluginEVM.Txm",
      "attributes": {
        "name": "EVM.1.RelayerService.PluginRelayerClient.PluginEVM.Txm",
        "status": "passing",
        "output": ""
      }
    },
    {
      "type": "checks",
      "id": "EVM.1.RelayerService.PluginRelayerClient.PluginEVM.Txm.BlockHistoryEstimator",
      "attributes": {
        "name": "EVM.1.RelayerService.PluginRelayerClient.PluginEVM.Txm.BlockHistoryEstimator",
        "status": "passing",
        "output": ""
      }
    },
    {
      "type": "checks",
      "id": "EVM.1.RelayerService.PluginRelayerClient.PluginEVM.Txm.Broadcaster",
      "attributes": {
        "name": "EVM.1.RelayerService.PluginRelayerClient.PluginEVM.Txm.Broadcaster",
        "status": "passing",
        "output": ""
      }
    },
    {
      "type": "checks",
      "id": "EVM.1.RelayerService.PluginRelayerClient.PluginEVM.Txm.Confirmer",
      "attributes": {
        "name": "EVM.1.RelayerService.PluginRelayerClient.PluginEVM.Txm.Confirmer",
        "status": "passing",
        "output": ""
      }
    },
    {
      "type": "checks",
      "id": "EVM.1.RelayerService.PluginRelayerClient.PluginEVM.Txm.Finalizer",
      "attributes": {
        "name": "EVM.1.RelayerService.PluginRelayerClient.PluginEVM.Txm.Finalizer",
        "status": "passing",
        "output": ""
      }
    },
    {
      "type": "checks",
      "id": "EVM.1.RelayerService.PluginRelayerClient.PluginEVM.Txm.WrappedEvmEstimator",
      "attributes": {
        "name": "EVM.1.RelayerService.PluginRelayerClient.PluginEVM.Txm.WrappedEvmEstimator",
        "status": "passing",
        "output": ""
      }
    },
    {
      "type": "checks",
      "id": "HeadReporter",
      "attributes": {
        "name": "HeadReporter",
        "status": "passing",
        "output": ""
      }
    },
    {
      "type": "checks",
      "id": "Heartbeat",
      "attributes": {
        "name": "Heartbeat",
        "status": "passing",
        "output": ""
      }
    },
    {
      "type": "checks",
      "id": "JobSpawner",
      "attributes": {
        "name": "JobSpawner",
        "status": "passing",
        "output": ""
      }
    },
    {
      "type": "checks",
      "id": "LLOTransmissionReaper",
      "attributes": {
        "name": "LLOTransmissionReaper",
        "status": "passing",
        "output": ""
      }
    },
    {
      "type": "checks",
      "id": "Mailbox.Monitor",
      "attributes": {
        "name": "Mailbox.Monitor",
        "status": "passing",
        "output": ""
      }
    },
    {
      "type": "checks",
      "id": "Mercury.WSRPCPool",
      "attributes": {
        "name": "Mercury.WSRPCPool",
        "status": "passing",
        "output": ""
      }
    },
    {
      "type": "checks",
      "id": "Mercury.WSRPCPool.CacheSet",
      "attributes": {
        "name": "Mercury.WSRPCPool.CacheSet",
        "status": "passing",
        "output": ""
      }
    },
    {
      "type": "checks",
      "id": "PipelineORM",
      "attributes": {
        "name": "PipelineORM",
        "status": "passing",
        "output": ""
      }
    },
    {
      "type": "checks",
      "id": "PipelineRunner",
      "attributes": {
        "name": "PipelineRunner",
        "status": "passing",
        "output": ""
      }
    },
    {
      "type": "checks",
      "id": "PipelineRunner.BridgeCache",
      "attributes": {
        "name": "PipelineRunner.BridgeCache",
        "status": "passing",
        "output": ""
      }
    },
    {
      "type": "checks",
      "id": "RetirementReportCache",
      "attributes": {
        "name": "RetirementReportCache",
        "status": "passing",
        "output": ""
      }
    },
    {
      "type": "checks",
      "id": "Solana.Bar.RelayerService",
      "attributes": {
        "name": "Solana.Bar.RelayerService",
        "status": "passing",
        "output": ""
      }
    },
    {
      "type": "checks",
      "id": "Solana.Bar.RelayerService.PluginRelayerClient",
      "attributes": {
        "name": "Solana.Bar.RelayerService.PluginRelayerClient",
        "status": "passing",
        "output": ""
      }
    },
    {
      "type": "checks",
      "id": "Solana.Bar.RelayerService.PluginRelayerClient.PluginSolana",
      "attributes": {
        "name": "Solana.Bar.RelayerService.PluginRelayerClient.PluginSolana",
        "status": "passing",
        "output": ""
      }
    },
    {
      "type": "checks",
      "id": "Solana.Bar.RelayerService.PluginRelayerClient.PluginSolana.Chain",
      "attributes": {
        "name": "Solana.Bar.RelayerService.PluginRelayerClient.PluginSolana.Chain",
        "status": "passing",
        "output": ""
      }
    },
    {
      "type": "checks",
      "id": "Solana.Bar.RelayerService.PluginRelayerClient.PluginSolana.Chain.BalanceMonitor",
      "attributes": {
        "name": "Solana.Bar.RelayerService.PluginRelayerClient.PluginSolana.Chain.BalanceMonitor",
        "status": "passing",
        "output": ""
      }
    },
    {
      "type": "checks",
      "id": "Solana.Bar.RelayerService.PluginRelayerClient.PluginSolana.Chain.Txm",
      "attributes": {
        "name": "Solana.Bar.RelayerService.PluginRelayerClient.PluginSolana.Chain.Txm",
        "status": "passing",
        "output": ""
      }
    },
    {
      "type": "checks",
      "id": "Solana.Bar.RelayerService.PluginRelayerClient.PluginSolana.Relayer",
      "attributes": {
        "name": "Solana.Bar.RelayerService.PluginRelayerClient.PluginSolana.Relayer",
        "status": "passing",
        "output": ""
      }
    },
    {
      "type": "checks",
      "id": "StarkNet.Baz.RelayerService",
      "attributes": {
        "name": "StarkNet.Baz.RelayerService",
        "status": "passing",
        "output": ""
      }
    },
    {
      "type": "checks",
      "id": "StarkNet.Baz.RelayerService.PluginRelayerClient",
      "attributes": {
        "name": "StarkNet.Baz.RelayerService.PluginRelayerClient",
        "status": "passing",
        "output": ""
      }
    },
    {
      "type": "checks",
      "id": "StarkNet.Baz.RelayerService.PluginRelayerClient.PluginStarknet",
      "attributes": {
        "name": "StarkNet.Baz.RelayerService.PluginRelayerClient.PluginStarknet",
        "status": "passing",
        "output": ""
      }
    },
    {
      "type": "checks",
      "id": "StarkNet.Baz.RelayerService.PluginRelayerClient.PluginStarknet.Chain",
      "attributes": {
        "name": "StarkNet.Baz.RelayerService.PluginRelayerClient.PluginStarknet.Chain",
        "status": "passing",
        "output": ""
      }
    },
    {
      "type": "checks",
      "id": "StarkNet.Baz.RelayerService.PluginRelayerClient.PluginStarknet.Chain.Txm",
      "attributes": {
        "name": "StarkNet.Baz.RelayerService.PluginRelayerClient.PluginStarknet.Chain.Txm",
        "status": "passing",
        "output": ""
      }
    },
    {
      "type": "checks",
      "id": "StarkNet.Baz.RelayerService.PluginRelayerClient.PluginStarknet.Relayer",
      "attributes": {
        "name": "StarkNet.Baz.RelayerService.PluginRelayerClient.PluginStarknet.Relayer",
        "status": "passing",
        "output": ""
      }
    },
    {
      "type": "checks",
      "id": "TelemetryManager",
      "attributes": {
        "name": "TelemetryManager",
        "status": "passing",
        "output": ""
      }
    },
    {
      "type": "checks",
      "id": "WorkflowLimiter",
      "attributes": {
        "name": "WorkflowLimiter",
        "status": "passing",
        "output": ""
      }
    },
    {
      "type": "checks",
      "id": "WorkflowStore",
      "attributes": {
        "name": "WorkflowStore",
        "status": "passing",
        "output": ""
      }
    }
  ]
}
-- out-unhealthy.json --
{
  "data": [
    {
      "type": "checks",
      "id": "EVM.1.RelayerService.PluginRelayerClient.PluginEVM.HeadTracker.HeadListener",
      "attributes": {
        "name": "EVM.1.RelayerService.PluginRelayerClient.PluginEVM.HeadTracker.HeadListener",
        "status": "failing",
        "output": "Listener connected = false, receiving heads = false"
      }
    },
    {
      "type": "checks",
      "id": "EVM.1.RelayerService.PluginRelayerClient.PluginEVM.Mailbox.Monitor",
      "attributes": {
        "name": "EVM.1.RelayerService.PluginRelayerClient.PluginEVM.Mailbox.Monitor",
        "status": "failing",
        "output": "service is \"Unstarted\", not started"
      }
    }
  ]
}
